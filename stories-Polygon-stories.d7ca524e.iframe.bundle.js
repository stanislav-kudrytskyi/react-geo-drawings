"use strict";(self.webpackChunkreact_geo_drawings=self.webpackChunkreact_geo_drawings||[]).push([[691],{"./src/stories/Polygon.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{PolygonDemo:function(){return PolygonDemo},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Polygon_stories}});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./src/index.ts"),constants=__webpack_require__("./src/drawings/constants.ts"),LocalizationProvider=__webpack_require__("./src/drawings/LocalizationProvider.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const initPolygons=[{name:"random1",coords:[{lat:48.774,lng:54},{lat:48.466,lng:57.118},{lat:47,lng:54}]},{name:"random2",coords:[{lat:45.5,lng:50},{lat:46.466,lng:51.118},{lat:45,lng:51}]}],kyiv={lat:50.4501,lng:30.5234},MultiplePolygonExample=()=>{const ref=(0,react.useRef)(null),polygonCoordinates=(0,src.Pn)(),[polygons,setPolygons]=(0,react.useState)(initPolygons);return(0,react.useEffect)((()=>{const ts=setTimeout((()=>{setPolygons((prev=>prev.find((p=>"delayedPolygon"===p.name))?prev:[...prev,{name:"delayedPolygon",coords:[{lat:49.217954596794996,lng:44.47273632812501},{lat:52.248318068651045,lng:47.37312695312501},{lat:49.24665060861438,lng:51.19636914062501}]}]))}),3e3);return()=>{clearTimeout(ts)}}),[]),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("div",{style:{display:"inline-block",width:"50%",verticalAlign:"top"},children:(0,jsx_runtime.jsx)("textarea",{style:{width:500,height:500},value:JSON.stringify(polygonCoordinates,null,2),readOnly:!0})}),(0,jsx_runtime.jsxs)("div",{style:{display:"inline-block",width:"50%"},children:[(0,jsx_runtime.jsx)("div",{style:{height:"600px"},ref:ref,id:"map"}),(0,jsx_runtime.jsx)(src.WK,{containerRef:ref,center:kyiv,minZoom:3,localization:{[LocalizationProvider.Fe.DELETE_VERTEX]:"Delete vertex"},modes:[constants.oO.POLYGON],children:polygons.map((_ref=>{let{name:name,coords:coords}=_ref;return(0,jsx_runtime.jsx)(src.mg,{coordinates:coords,editable:!0,removable:!0,figureId:name},name)}))})]})]})};MultiplePolygonExample.displayName="MultiplePolygonExample";var MultiplePolygonsExample=MultiplePolygonExample,Polygon_stories={title:"GeoDrawing/Polygon/Multiple",component:src.WK,parameters:{layout:"fullscreen"}};const Template=()=>(0,jsx_runtime.jsx)(src.Ib,{provider:"google",apiKey:"",children:(0,jsx_runtime.jsx)(MultiplePolygonsExample,{})});Template.displayName="Template";const PolygonDemo=Template.bind({});PolygonDemo.args={},PolygonDemo.parameters={...PolygonDemo.parameters,docs:{...PolygonDemo.parameters?.docs,source:{originalSource:'() => <MapProvider provider="google" apiKey="">\n        <MultiplePolygonExample />\n    </MapProvider>',...PolygonDemo.parameters?.docs?.source}}};const __namedExportsOrder=["PolygonDemo"]}}]);