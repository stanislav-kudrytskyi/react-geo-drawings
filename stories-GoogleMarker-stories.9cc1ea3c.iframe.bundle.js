"use strict";(self.webpackChunkreact_geo_drawings=self.webpackChunkreact_geo_drawings||[]).push([[70],{"./src/stories/GoogleMarker.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GoogleMarker:function(){return GoogleMarker},__namedExportsOrder:function(){return __namedExportsOrder}});var _storybook_client_api__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("@storybook/client-api"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_index__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const kyiv={lat:50.4501,lng:30.5234};__webpack_exports__.default={title:"GeoDrawing/Marker",component:_index__WEBPACK_IMPORTED_MODULE_2__.Jx,parameters:{layout:"fullscreen"}};const Template=args=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[,updateArgs]=(0,_storybook_client_api__WEBPACK_IMPORTED_MODULE_0__.useArgs)(),onCoordinatesChange=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((point=>{updateArgs({coordinates:point})}),[updateArgs]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_index__WEBPACK_IMPORTED_MODULE_2__.Ib,{provider:"google",apiKey:"",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{height:"600px"},ref:ref,id:"map"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.WK,{containerRef:ref,center:kyiv,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_index__WEBPACK_IMPORTED_MODULE_2__.Jx,{...args,onChange:onCoordinatesChange})})]})};Template.displayName="Template";const GoogleMarker=Template.bind({});GoogleMarker.storyName="google marker",GoogleMarker.args={draggable:!0,coordinates:kyiv},GoogleMarker.parameters={...GoogleMarker.parameters,docs:{...GoogleMarker.parameters?.docs,source:{originalSource:'args => {\n  const ref = useRef<HTMLDivElement>(null);\n  const [, updateArgs] = useArgs();\n  const onCoordinatesChange = useCallback((point: Point) => {\n    updateArgs({\n      coordinates: point\n    });\n  }, [updateArgs]);\n  return <MapProvider provider="google" apiKey="">\n            <div style={{\n      height: \'600px\'\n    }} ref={ref} id="map" />\n            <GeoMap containerRef={ref} center={kyiv}>\n                {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n                <Marker {...args} onChange={onCoordinatesChange} />\n            </GeoMap>\n        </MapProvider>;\n}',...GoogleMarker.parameters?.docs?.source}}};const __namedExportsOrder=["GoogleMarker"]}}]);